apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nodepolicyprofile
    app.kubernetes.io/name: k8s-policy-controller
  name: nodepolicyprofile-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nodepolicyprofile
      app.kubernetes.io/name: k8s-policy-controller
  template:
    metadata:
      labels:
        app: k8s-policy-controller
        app.kubernetes.io/instance: nodepolicyprofile
        app.kubernetes.io/name: k8s-policy-controller
        instance: nodepolicyprofile
    spec:
      containers:
      - args:
        - --namespace=$POD_NAMESPACE
        env:
          name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k8s-policy-controller
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: webhook-server
            scheme: HTTPS
        name: controller
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: webhook-server
            scheme: HTTPS
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext: {}
      serviceAccountName: nodepolicyprofile-controller
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: nodepolicyprofile-controller-tls
