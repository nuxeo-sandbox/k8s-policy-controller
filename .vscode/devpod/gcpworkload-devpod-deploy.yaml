apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcpworkload-devpod
  labels:
    app.kubernetes.io/instance: devpod
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: gcpworkload
      app.kubernetes.io/name: k8s-policies-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: gcpworkload
        app.kubernetes.io/name: k8s-policies-controller
        usage: code
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: gcpworkload-controller
      schedulerName: default-scheduler
      containers:
      - name: dev
        image: golang:1.15
        command: ["/usr/bin/tail", "-f", "/dev/null"]
        ports:
        - name: webhook-server
          protocol: TCP
          containerPort: 9443
        volumeMounts:
        - name: cert
          readOnly: true
          mountPath: /tmp/k8s-webhook-server/serving-certs
        - name: workspace
          readOnly: false
          mountPath: /root
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: Always
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: gcpworkload-controller-tls
      - name: workspace
        persistentVolumeClaim:
          claimName: devpod-workspace
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
